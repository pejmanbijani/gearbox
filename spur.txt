clc
clear
P=input ('Power (Kw) =');
wingearbox = input('Win gearbox (rpm)=');
M=(P/wingearbox)*(10^6/(2*pi/60));
m = input ('supposed m =') ; %module farzi
angle =pi/9;
mG0 = input ('enter mG =');
life=input('life (in year) =');
k = 1;
x=input ('enter x (3p=<x=< 5p)=');
F=x*m;
Sut=input('enter Sut (Mpa) =');
HB=input ('enter Brinell Hardness = ');
%Zarib eslah pardakht sath p347
a=4.51;
b=-0.265;
ka=a*Sut^b;

kf=1.4;%deriving machine

St=ka*kf*0.5*Sut;
Sc= 2.22*HB+200;

N=life*250*8*60*wingearbox;
Np0 = (2*k*(mG0 +  ( mG0^2 + (1+2*mG0)* (sin(angle))^2   )^(1/2)  ) )/( (1+ 2*mG0)* (sin(angle))^2);
NpMin = ceil(Np0);
NpMinstr=num2str(NpMin);
disp(['Np Min =' NpMinstr]);
Np = input('enter Np =');


NG0 = (NpMin ^2 * (sin(angle))^2 - 4*k^2 )/(4*k - 2*NpMin *(sin(angle) )^2);
NGmax = fix (NG0);

NGmax1=num2str(NGmax);
disp(['NGmax = ' NGmax1]);

NG1= Np * mG0;
NG2= ceil(NG1);
NG3=num2str(NG2);
disp(['NG =' NG3])

NG=input('NG =');
mG = NG/Np;
mG1=num2str(mG);
disp(['mG = ' mG1]);


%Lewis factor y  p750
lewisYdatashit = xlsread('C:\Users\Silver\Desktop\Y for angle of 20');
Numofteeth = lewisYdatashit(:,1);
lewisY = lewisYdatashit (:,2);
Y = interp1(Numofteeth , lewisY , NG );

disp('Y');
disp(Y);

%size factor  p772
ks0 = 0.8433* (F*m*(Y)^(1/2))^(0.0535);
if (ks0 <= 1)
    ks = 1 ;
else
    ks=ks0 ;
end
disp('ks')
disp(ks)
%bendig-strength geometric factor P764 /766
Yj = input('enter Yj (j) =');


%Rim-thickness Factor  p778
mB = input ('enter mB (tR/ht) = ');
if (mB < 1.2)
   kB = 1.6 * log (2.242/mB);
else 
    kB = 1 ;
end
disp('kB')
disp(kB)
%pitch diameter  
dp = Np * m ;


%over load factor p780 
ko = input ('enter Ko =  ');



%elastic coefficient p769 /756
Cp = input ('enter Cp=');


%dynamic factor  p751
V= Np*m*wingearbox*pi/60000  ;% v in m/s
disp ('1.Cast iron,cast profile ')
disp ('2.Cut or milled profile')
disp ('3.hobbed or shaped profile')
disp ('4.shaved or ground profile')
nn = input ('enter number');
switch nn
    case 1
        Kv = (3.05+ V)/3.05;
    case 2
        Kv = (6.1+V)/6.1;
    case 3
        Kv = (3.56+ (V)^(1/2))/3.56;
    case 4  
        Kv = ((5.56+ V^(1/2))/5.56)^(1/2) ;
    otherwise
        disp ('play again :)')
end
  disp('Kv')
disp(Kv)
%surface-strength geometry factor ZI  p767
mN=1 ;
ZI = (cos (angle) * sin (angle) * mG )/(2*mN * (mG +1 )) ;
disp('ZI')
disp(ZI)
%temperature factor  778
T=input ('enter temprature (in celcius) = ');
if (T<=120)
    KT=1;
else
    if (120<=T) && (T<=350)
        KT=0.5;
    else
        disp('KT is more than 1');
    end
end

%reliability factor  p777
R=input ('enter percent of Reliability (R) = ');
if (0.5<R) && (R<0.99)
  KR = 0.658 - 0.0759 *log(1-R);
else 
    if (0.99<=R ) && (R<=0.9999)
        KR=0.5-0.109*log(1-R) ;
    else 
        disp ('wrong');
    end
end
disp('KR')
disp(KR)
%load disturbation factor Km (KH) p 772
Cmc=1;
F1=F/25.4 ;
dp1=dp/25.4;
ab =F1/(10*dp1);

if (ab<0.05)
    aa=0.05;
else
    aa=ab;
end

if (F1 <=1)
    Cpf=aa-0.025;
else
   if (F1>1)&& (F1<=17)
    Cpf= aa - 0.0375 + (0.0125*F1);
   else
      if (F1>17) && (F1<=40)
    Cpf= aa-0.01109 + (0.0207 *F1) - (0.000228*( F1^2));
      end
   end
end
 disp('Cpf')
 disp(Cpf)
Cpm=1;
Ce=1;
disp('we want to calculate Km and we want A,B,C to calculate Cma')
disp('1.open Gearing ')
disp('2.Commercial ,enclosed units')
disp('3.precision,enclosed units')
disp('4.Extera precision enclosed gear units')
n1=input('please choose the condition :');
switch n1
    case 1
        A=0.247;
        B=0.0167;
        C=-0.0000765;
    case 2
        A=0.127;
        B=0.0158;
        C=-0.000093;
    case 3
        A=0.0675;
        B=0.0128;
        C=-0.0000926;
    case 4
        A=0.00360;
        B=0.0102;
        C=0.0000822;
end

Cma = A+ B*F1 +( C* (F1^2));
disp('Cma')
disp(Cma)
Km= 1 + Cmc*( Cpf*Cpm + Cma*Ce);

%safety Factor SF and SH P779
SF=input ('enter safety Factor SF=');
SH=SF^(1/2);

%Hardness ratio Factor CH p 774
CH=1;

%Stress cycle life factor YN  p776
YN0 = 1.3558* N^(-0.0178) ;
YN1= 1.6831 * N^ (-0.0323);


ZN0=1.4488* N^(-0.023);
ZN1=2.466*N^(-0.056);


Cf=1;
disp('YN up =')
disp(YN0)
disp('YN Down =')
disp(YN1)
YN=input('enter YN =');

disp('ZN up =')
disp(ZN0)
disp('ZN down =')
disp(ZN1)
ZN=input('enter ZN =');

mb= (2*M*SF*KT*KR*ko*Kv*ks*Km*kB/(Np*x*Yj*St*YN))^(1/3);
mH= (  ((Cp*SH*KT*KR/(Sc*ZN*CH))^2) *2*M*ko*Kv*ks*Km*Cf /((Np^2)*x*ZI )  )^(1/3);
disp('mb =')
disp(mb)
disp('mH =')
disp (mH)